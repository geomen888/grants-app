version: '3.3'

services:
  # Frontend Service (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: grants-frontend
    ports:
      - "3001:80"
    networks:
      - grants-network

  # PostgreSQL Service
  db:
    image: postgres:12
    container_name: grants-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: opportunities
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - grants-network
  
  # Backend Service (NestJS App)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    container_name: grants-backend
    environment:
      DATABASE_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: opportunities
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app
    networks:
      - grants-network

  # Backend Seeder Service
  backend-seed:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend-seed
    container_name: grants-backend-seed
    command: ["node", "dist/postgres/seeder/seeder.js", "--limit", "50"]
    environment:
      DATABASE_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: opportunities
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app
    networks:
      - grants-network    

  # Backend Test Service
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend-test
    container_name: grants-backend-test
    command: ["pnpm", "run", "test"]
    environment:
      DATABASE_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: opportunities
    depends_on:
      - db
    volumes:
      - ./backend:/usr/src/app
    networks:
      - grants-network

networks:
  grants-network:
    driver: bridge

volumes:
  postgres-data:
